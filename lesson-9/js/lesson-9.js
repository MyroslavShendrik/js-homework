//todo [ДЗ] 
console.log(
    "%c [ДЗ] ",
    "color: yellow; background-color: #2274A5",
);
//? Є масив logins з логінами користувачів. 
//? Напиши скрипт додавання логіна в масив logins. 
//? Логін, який додається повинен:
//?  - проходити перевірку на довжину від 4 до 16-ти символів включно
//?  - бути унікальним, тобто бути відсутнім в масиві logins.
//? ⚠️ Розбий завдання на підзадачі за допомогою функцій.
//? 1️⃣ Напиши функцію isLoginValid(login), 
//? в якій перевір кількість символів параметра login 
//? і поверни true або false в залежності від того, 
//? чи потрапляє довжина параметра в заданий 
//? діапазон від 4-х до 16-ти символів включно.
//? 2️⃣ Напиши функцію isLoginUnique(allLogins, login), 
//? яка приймає список всіх логінів і логін, 
//? який додається, як параметри 
//? і перевіряє наявність login в массиве allLogins, 
//? повертає true якщо такого логіна ще немає і
//? false якщо логін вже використовується.
//? 3️⃣ Напиши функцію addLogin(allLogins, login) яка:
//?  - Приймає новий логін і масив всіх логінів як параметри
//?  - Перевіряє валідність логіна використовуючи допоміжну функцію isLoginValid
//?  - Якщо логін не валідний, припинити виконання функції addLogin 
//?    і повернути радок: 'Помилка! Логін повинен бути від 4 до 16 символів'
//?  - Якщо логін валідний, функція addLogin перевіряє унікальність логіна за допомогою функції isLoginUnique
//?  - Якщо isLoginUnique поверне false, тоді addLogin не додає логін в массив масив 
//?    і повертає рядок: 'Такий логін вже використовується!'
//?  - Якщо isLoginUnique поверне true, addLogin додає новий логін в logins 
//?    і повертає рядок: 'Логін успішно доданий!'
//? 🔔 Принцип єдиної відповідальності функції 
//?  — кожна функція робить щось одне. 
//? Це дозволяє перевикористати код і змінювати логіку роботи функції 
//? тільки в одному місці, не зачіпаючи роботу програми в цілому.
//? ❗️ ℹ️ ❓ Предикатні функції повертають тільки true або false. 
//?       Такі функції прийнято називати починаючи з is: 
//?       isLoginUnique і isLoginValid в нашому випадку.
//?        - isLoginUnique тільки перевіряє чи є такий логін в масиві і повертає true або false.
//?        - isLoginValid тільки перевіряє чи валідний логін і повертає true або false.
//? Не предикатна функція addLogin лише додає чи не додає логін в масив,
//? використовуючи, для перевірок умови додавання,
//? результати викликів інших предикатних функцій — isLoginUnique і isLoginValid. 
//! Код виконаного завдання

const logins = ["Mipkol", "Mipkolim"];

function isLoginValid(login) {
    return login.length >= 4 && login.length <= 16;
}

function isLoginUnique(allLogins, login) {
    return !allLogins.includes(login);
}

function addLogin(allLogins, login) {
    if (!isLoginValid(login)) {
        return 'Логін повинен бути від 4 до 16 символів';
    }
    
    if (!isLoginUnique(allLogins, login)) {
        return 'Такий логін вже є';
    }
    
    allLogins.push(login);
    return 'Логін успішно доданий';
}
console.log(addLogin(logins, "Maxs"));
console.log(addLogin(logins, "Mipkol")); 
console.log(addLogin(logins, "Alg"));  
console.log(addLogin(logins, "4343434343434343434343434343434343434"));  

//todo [1]
console.log(
    "%c [1] ",
    "color: yellow; background-color: #2274A5",
);
//? Напиши функцію logItems(array), 
//? яка отримує масив і використовує цикл for, 
//? який для кожного елемента масиву 
//? буде виводити в консоль повідомлення 
//? в форматі [номер елемента] - [значення елемента].
//? Нумерація повинна починатися з 1. 
//? Наприклад, для першого елемента масиву 
//? ['Mango', 'Poly', 'Ajax'] 
//? з індексом 0 буде виведено '1 - Mango', 
//? а для індексу 2 виведе '3 - Ajax'.
//! Код виконаного завдання

console.log("--------------------------------------------------");


//todo [2]
console.log(
    "%c [2] ",
    "color: yellow; background-color: #2274A5",
);
//? Напиши скрипт підрахунку вартості гравірування прикрас. 
//? Для цього створи функцію 
//? calculateEngravingPrice(message, pricePerWord) 
//? приймаючу рядок (в рядку будуть тільки слова і прогалини) 
//? і ціну гравірування одного слова, 
//? і повертає ціну гравірування всіх слів в рядку.
//! Код виконаного завдання

console.log("--------------------------------------------------");


//todo [3]
console.log(
    "%c [3] ",
    "color: yellow; background-color: #2274A5",
);
//? Напиши функцію findLongestWord(string), 
//? яка приймає параметром довільний рядок 
//? (в рядку будуть тільки слова і прогалини) 
//? і повертає ПЕРШЕ найдовше слово в цьому рядку.
//! Код виконаного завдання

console.log("--------------------------------------------------");


//todo [4]
console.log(
    "%c [4] ",
    "color: yellow; background-color: #2274A5",
);
//? Напиши функцію formatString(string) 
//? яка приймає рядок і форматує його якщо необхідно.
//?  - Якщо довжина рядка не перевищує 40 символів, 
//?    функція повертає її в початковому вигляді.
//?  - Якщо довжина більше 40 символів, 
//?    то функція обрізає рядок до 40-ка символів 
//?    і додає в кінець рядка три крапки '...', 
//?    після чого повертає укорочену версію.
//! Код виконаного завдання

console.log("--------------------------------------------------");


//todo [5]
console.log(
    "%c [5] ",
    "color: yellow; background-color: #2274A5",
);
//? Напиши функцію checkForSpam(message),
//? приймаючу 1 параметр message — рядок.
//? Функція перевіряє її на вміст слів spam або sale.
//? Якщо знайшли заборонене слово,
//? то функція повертає true,
//? якщо заборонених слів немає функція повертає false.
//? Слова в рядку можуть бути в довільному регістрі.
//! Код виконаного завдання

console.log("--------------------------------------------------");


//todo [6]
console.log(
    "%c [6] ",
    "color: yellow; background-color: #2274A5",
);
//? Напиши скрипт з наступним функціоналом:
//? При завантаженні сторінки користувачеві
//? пропонується в prompt ввести число.
//? Введення зберігається в змінну input
//? і додається в масив чисел numbers.
//? Операція введення числа користувачем
//? і збереження в масив триває до тих пор, пір,
//? поки користувач не натисне Cancel в prompt.
//? Після того як користувач припинив введення
//? натиснувши Cancel, якщо масив не порожній,
//? необхідно порахувати суму всіх елементів масиву
//? і записати її в змінну total.
//? Використовуй цикл for або for...of.
//? Після чого в консоль виведи рядок:
//? 'Загальна сума чисел дорівнює [сума]'.
//? ❗️ Робити перевірку того, що користувач ввів саме число,
//? а не довільний набір символів або пустий рядок, обов'язково.
//? В разі некоректного введення, показуй alert з текстом:
//? 'Було введено не число, спробуйте ще раз',
//? при цьому результат prompt
//? записувати в масив чисел не потрібно,
//? після чого знову користувачеві пропонується ввести число в prompt.
//! Код виконаного завдання

console.log("--------------------------------------------------");
