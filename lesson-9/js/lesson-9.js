//todo [ДЗ] 
console.log(
    "%c [ДЗ] ",
    "color: yellow; background-color: #2274A5",
);
//? Є масив logins з логінами користувачів. 
//? Напиши скрипт додавання логіна в масив logins. 
//? Логін, який додається повинен:
//?  - проходити перевірку на довжину від 4 до 16-ти символів включно
//?  - бути унікальним, тобто бути відсутнім в масиві logins.
//? ⚠️ Розбий завдання на підзадачі за допомогою функцій.
//? 1️⃣ Напиши функцію isLoginValid(login), 
//? в якій перевір кількість символів параметра login 
//? і поверни true або false в залежності від того, 
//? чи потрапляє довжина параметра в заданий 
//? діапазон від 4-х до 16-ти символів включно.
//? 2️⃣ Напиши функцію isLoginUnique(allLogins, login), 
//? яка приймає список всіх логінів і логін, 
//? який додається, як параметри 
//? і перевіряє наявність login в массиве allLogins, 
//? повертає true якщо такого логіна ще немає і
//? false якщо логін вже використовується.
//? 3️⃣ Напиши функцію addLogin(allLogins, login) яка:
//?  - Приймає новий логін і масив всіх логінів як параметри
//?  - Перевіряє валідність логіна використовуючи допоміжну функцію isLoginValid
//?  - Якщо логін не валідний, припинити виконання функції addLogin 
//?    і повернути радок: 'Помилка! Логін повинен бути від 4 до 16 символів'
//?  - Якщо логін валідний, функція addLogin перевіряє унікальність логіна за допомогою функції isLoginUnique
//?  - Якщо isLoginUnique поверне false, тоді addLogin не додає логін в массив масив 
//?    і повертає рядок: 'Такий логін вже використовується!'
//?  - Якщо isLoginUnique поверне true, addLogin додає новий логін в logins 
//?    і повертає рядок: 'Логін успішно доданий!'
//? 🔔 Принцип єдиної відповідальності функції 
//?  — кожна функція робить щось одне. 
//? Це дозволяє перевикористати код і змінювати логіку роботи функції 
//? тільки в одному місці, не зачіпаючи роботу програми в цілому.
//? ❗️ ℹ️ ❓ Предикатні функції повертають тільки true або false. 
//?       Такі функції прийнято називати починаючи з is: 
//?       isLoginUnique і isLoginValid в нашому випадку.
//?        - isLoginUnique тільки перевіряє чи є такий логін в масиві і повертає true або false.
//?        - isLoginValid тільки перевіряє чи валідний логін і повертає true або false.
//? Не предикатна функція addLogin лише додає чи не додає логін в масив,
//? використовуючи, для перевірок умови додавання,
//? результати викликів інших предикатних функцій — isLoginUnique і isLoginValid. 
//! Код виконаного завдання

const logins = ["Mipkol", "Mipkolim"];

function isLoginValid(login) {
    return login.length >= 4 && login.length <= 16;
}

function isLoginUnique(allLogins, login) {
    return !allLogins.includes(login);
}

function addLogin(allLogins, login) {
    if (!isLoginValid(login)) {
        return 'Логін повинен бути від 4 до 16 символів';
    }
    
    if (!isLoginUnique(allLogins, login)) {
        return 'Такий логін вже є';
    }
    
    allLogins.push(login);
    return 'Логін успішно доданий';
}
console.log(addLogin(logins, "Maxs"));
console.log(addLogin(logins, "Mipkol")); 
console.log(addLogin(logins, "Alg"));  
console.log(addLogin(logins, "4343434343434343434343434343434343434"));  
