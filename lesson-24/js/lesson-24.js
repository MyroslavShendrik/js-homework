import { success, error, info } from "@pnotify/core";
import "@pnotify/core/dist/PNotify.css";
import "@pnotify/core/dist/BrightTheme.css";

const keys = ['a','s','d','f','g','h','j','k','l','z'];
let currentKeyIndex = 0;

const keySpan = document.getElementById('key');
const newGameBtn = document.getElementById('new-game');

function setNewKey() {
  currentKeyIndex = Math.floor(Math.random() * keys.length);
  keySpan.textContent = keys[currentKeyIndex];
}

// –û–±—Ä–æ–±–Ω–∏–∫ keydown
document.addEventListener('keydown', (event) => {
  if (event.key === keys[currentKeyIndex]) {
    success({
      text: `‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ù–∞—Ç–∏—Å–Ω—É—Ç–∞ "${event.key}"`,
      delay: 1500
    });
    setNewKey();
  } else {
    error({
      text: `‚ùå –ü–æ–º–∏–ª–∫–∞! –ü–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ "${keys[currentKeyIndex]}"`,
      delay: 1500
    });
  }
});

// –û–±—Ä–æ–±–Ω–∏–∫ keypress (—â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –Ω–µ–±–∞–∂–∞–Ω–æ—ó –ø–æ–≤–µ–¥—ñ–Ω–∫–∏)
document.addEventListener('keypress', (event) => {
  event.preventDefault();
});

// –ù–æ–≤–∞ –≥—Ä–∞
newGameBtn.addEventListener('click', () => {
  setNewKey();
  info({
    text: 'üéÆ –ù–æ–≤–∞ –≥—Ä–∞ –ø–æ—á–∞–ª–∞—Å—è! –ù–∞—Ç–∏—Å–∫–∞–π –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –∫–ª–∞–≤—ñ—à—ñ.',
    delay: 2000
  });
});

// –ü–æ—á–∞—Ç–∫–æ–≤–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞
setNewKey();